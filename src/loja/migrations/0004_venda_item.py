# Generated by Django 5.0.4 on 2024-12-16 05:17

import django.core.validators
import django.db.models.deletion
import django.db.models.manager
import loja.validators
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('loja', '0003_timeslice_caixa_fluxodecaixa_produto_produtoporlote_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Venda',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'codigo_nota_fical',
                    models.CharField(
                        editable=False,
                        max_length=256,
                        null=True,
                        unique=True,
                        verbose_name='Código da nota fiscal',
                    ),
                ),
                (
                    'data_hora',
                    models.DateTimeField(
                        auto_now_add=True,
                        validators=[loja.validators.validate_data_atual_promocao],
                        verbose_name='Data e hora',
                    ),
                ),
                (
                    'porcentagem_desconto',
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MaxValueValidator(
                                100, 'Porcentagem não pode exceder 100%.'
                            ),
                            django.core.validators.MinValueValidator(
                                0, 'Porcentagem não pode ser negativo.'
                            ),
                        ],
                        verbose_name='Porcentagem do desconto',
                    ),
                ),
                (
                    'comissao_vendedor',
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal('0'),
                        editable=False,
                        max_digits=11,
                        verbose_name='Comissão do vendedor',
                    ),
                ),
                (
                    'caixa',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='loja.caixa',
                        verbose_name='Caixa',
                    ),
                ),
                (
                    'caixeiro',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='vendas_como_caixeiro',
                        to='loja.caixeiro',
                        verbose_name='Caixeiro',
                    ),
                ),
                (
                    'loja',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='loja.loja',
                        verbose_name='Loja',
                    ),
                ),
                (
                    'vendedor',
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='vendas_como_vendedor',
                        to='loja.vendedor',
                        verbose_name='Vendedor',
                    ),
                ),
            ],
            managers=[
                ('vendas', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'quantidade',
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(
                                1, 'Quantidade não pode ser nula ou negativa.'
                            )
                        ],
                        verbose_name='Quantidade',
                    ),
                ),
                (
                    'preco_vendido',
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=11,
                        validators=[
                            django.core.validators.MinValueValidator(
                                Decimal('0.01'), 'Preço não pode ser nulo ou negativo.'
                            )
                        ],
                        verbose_name='Preço unitário',
                    ),
                ),
                (
                    'loja',
                    models.ForeignKey(
                        editable=False,
                        on_delete=django.db.models.deletion.CASCADE,
                        to='loja.loja',
                        verbose_name='Loja',
                    ),
                ),
                (
                    'lote',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to='loja.produtoporlote',
                        verbose_name='Lote',
                    ),
                ),
                (
                    'venda',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name='itens',
                        to='loja.venda',
                        verbose_name='Venda',
                    ),
                ),
            ],
            managers=[
                ('itens', django.db.models.manager.Manager()),
            ],
        ),
    ]
